<Window x:Class="WpfMVVMTest.PointEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfMVVMTest"
        mc:Ignorable="d"
        Title="Редактирование координат двумерной точки" Height="350" Width="525">    
    <Window.Resources>
        <Style x:Key="CoordinateSystemLabel" TargetType="Label">
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Control.FontSize" Value="10" />
        </Style>
        <Style x:Key="CoordinateSystemPropertyTextBlock" TargetType="TextBlock">
            <Setter Property="FrameworkElement.Margin" Value="0,5,0,0" />
        </Style>
        <Style x:Key="DecimalTextBox" TargetType="TextBox">
            <EventSetter Event="UIElement.KeyUp" Handler="DecimalTextBoxes_KeyUp" />
            <EventSetter Event="Binding.SourceUpdated" Handler="DecimalTextBoxes_SourceUpdated" />
            <EventSetter Event="Binding.TargetUpdated" Handler="DecimalTextBoxes_TargetUpdated" />
        </Style>
    </Window.Resources>
    <Grid Margin="10" DataContext="{Binding PointEditorViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="50" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="150" Width="auto" />
            <ColumnDefinition MinWidth="50" />
        </Grid.ColumnDefinitions>
        
        <!-- Левая часть формы - редактирование координат в двух системах -->
        <StackPanel Orientation="Vertical">
            <StackPanel Orientation="Vertical" Margin="0,10">
                <Label Style="{StaticResource CoordinateSystemLabel}" Content="Декартовы координаты" HorizontalAlignment="Center" />
                <TextBlock Style="{StaticResource CoordinateSystemPropertyTextBlock}" Text="Координата X" />
                <TextBox Style="{StaticResource DecimalTextBox}"  Text="{local:DecimalTextBoxTextBinding X}" />
                <TextBlock Style="{StaticResource CoordinateSystemPropertyTextBlock}" Text="Координата Y" />
                <TextBox Style="{StaticResource DecimalTextBox}"  Text="{local:DecimalTextBoxTextBinding Y}" />
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,10">
                <Label Style="{StaticResource CoordinateSystemLabel}" Content="Полярные координаты" HorizontalAlignment="Center" />
                <TextBlock Style="{StaticResource CoordinateSystemPropertyTextBlock}" Text="Радиус" />
                <TextBox Style="{StaticResource DecimalTextBox}"  Text="{local:DecimalTextBoxTextBinding Radius}" />
                <TextBlock Style="{StaticResource CoordinateSystemPropertyTextBlock}" Text="Угол (градусы)" />
                <TextBox Style="{StaticResource DecimalTextBox}"  Text="{local:DecimalTextBoxTextBinding Angle}" />
            </StackPanel>
        </StackPanel>

        <!-- Правая часть формы - график -->
        <Canvas Margin="10,0,0,0" Grid.Column="1" Background="LightGray" SizeChanged="Chart_SizeChanged" >
            <Canvas.DataContext>
                <Binding Path="ChartViewModel">
                    <Binding.RelativeSource>
                        <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Window}" />
                    </Binding.RelativeSource>
                </Binding>
            </Canvas.DataContext>
            
            <!-- Горизонтальная линия от точки до координатной оси -->
            <Line Stroke="DarkGray" X1="{Binding VisualPoint.X}" Y1="{Binding VisualPoint.Y}" X2="{Binding Origin.X}" Y2="{Binding VisualPoint.Y}" />
            
            <!-- Вертикальная линия от точки до координатной оси -->
            <Line Stroke="DarkGray" X1="{Binding VisualPoint.X}" Y1="{Binding VisualPoint.Y}" X2="{Binding VisualPoint.X}" Y2="{Binding Origin.Y}" />
            
            <!-- Горизонтальная стрелка координатной оси -->
            <Path Stroke="Black" Canvas.Left="{Binding HorizontalArrowStartPoint.X}" Canvas.Top="{Binding HorizontalArrowStartPoint.Y}">
                <Path.Data>
                    <GeometryGroup>
                        <LineGeometry StartPoint = "0,0" EndPoint = "{Binding HorizontalArrowEndPoint}" />
                        <LineGeometry StartPoint = "0,0" EndPoint = "-10, 5" />
                        <LineGeometry StartPoint = "0,0" EndPoint = "-10, -5" />
                    </GeometryGroup>
                </Path.Data>
            </Path>
            <Label Canvas.Right="0" Canvas.Bottom="{Binding HorizontalArrowStartPoint.Y}" Content="Ось X">
                <Label.RenderTransform>
                    <TranslateTransform Y="-5" />
                </Label.RenderTransform>
            </Label>
            <Label Canvas.Right="0" Canvas.Top="{Binding HorizontalArrowStartPoint.Y}" Content="{Binding LabelX}">
                <Label.RenderTransform>
                    <TranslateTransform Y="5" />
                </Label.RenderTransform>
            </Label>
            
            <!-- Вертикальная стрелка координатной оси -->
            <Path Stroke="Black" Canvas.Left="{Binding VerticalArrowStartPoint.X}" Canvas.Top="{Binding VerticalArrowStartPoint.Y}">
                <Path.Data>
                    <GeometryGroup>
                        <LineGeometry StartPoint = "0,0" EndPoint = "{Binding VerticalArrowEndPoint}" />
                        <LineGeometry StartPoint = "0,0" EndPoint = "-5, 10" />
                        <LineGeometry StartPoint = "0,0" EndPoint = "5, 10" />
                    </GeometryGroup>
                </Path.Data>
            </Path>
            <Label Canvas.Right="{Binding VerticalArrowStartPoint.X}" Canvas.Top="0" Content="Ось Y">
                <Label.RenderTransform>
                    <TranslateTransform X="-7" />
                </Label.RenderTransform>
            </Label>
            <Label Canvas.Left="{Binding VerticalArrowStartPoint.X}" Canvas.Top="0" Content="{Binding LabelY}">
                <Label.RenderTransform>
                    <TranslateTransform X="7" />
                </Label.RenderTransform>
            </Label>
            
            <!-- Сама точка (рисуется в виде эллипса) -->
            <Ellipse Stroke="Transparent" Fill="Green" Canvas.Left="{Binding VisualPoint.X}" Canvas.Top="{Binding VisualPoint.Y}"
                     Width="8" Height="8">
                <Ellipse.RenderTransform>
                    <!-- Рисуем точку сдвинутой на половину размерностей, чтобы Canvas.Left/Canvas.Top указывали на ее центр а не левый верхний угол -->
                    <TranslateTransform X="-4" Y="-4" />
                </Ellipse.RenderTransform>
            </Ellipse>
            
            <!-- Надпись со значением координаты X точки -->
            <TextBlock Text="{Binding WorldPoint.X, StringFormat='X: \{0:0.00\}'}" Foreground="DarkGreen" Canvas.Top="{Binding VisualPoint.Y}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <!-- Пишем надпись слева или справа от координатной оси, в зависимости от того, с какой стороны сама точка -->
                            
                            <DataTrigger Binding="{Binding IsPointXPositive}" Value="true">
                                <Setter Property="Canvas.Right" Value="{Binding Origin.X}" />
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform X="-10" Y="-10" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPointXPositive}" Value="false">
                                <Setter Property="Canvas.Left" Value="{Binding Origin.X}" />
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform X="10" Y="-10" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            
            <!-- Надпись со значением координаты Y точки -->
            <TextBlock Text="{Binding WorldPoint.Y, StringFormat='Y: \{0:0.00\}'}" Foreground="DarkGreen" Canvas.Left="{Binding VisualPoint.X}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <!-- Пишем надпись снизу или сверху от координатной оси, в зависимости от того, с какой стороны сама точка -->
                            
                            <DataTrigger Binding="{Binding IsPointYPositive}" Value="true">
                                <Setter Property="Canvas.Top" Value="{Binding Origin.Y}" />
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform X="-15" Y="10" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPointYPositive}" Value="false">
                                <Setter Property="Canvas.Bottom" Value="{Binding Origin.Y}" />
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform X="-15" Y="-10" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Canvas>
    </Grid>
</Window>
